{
  "{\"sourceRoot\":\"/Users/zeeshankhalid/IMDb/MalwareBytes/test/specs/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/zeeshankhalid/IMDb/MalwareBytes\",\"filename\":\"/Users/zeeshankhalid/IMDb/MalwareBytes/test/specs/imdb250Chart.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/zeeshankhalid/IMDb/MalwareBytes\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/specs/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/zeeshankhalid/IMDb/MalwareBytes",
      "filename": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/specs/imdb250Chart.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/zeeshankhalid/IMDb/MalwareBytes",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/specs/imdb250Chart.spec.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/specs/imdb250Chart.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/specs/",
        "sourceFileName": "imdb250Chart.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _imdb250Chart = _interopRequireDefault(require(\"../pageobjects/imdb250Chart.page\"));\n\nvar _signIn = _interopRequireDefault(require(\"../pageobjects/signIn.page\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n\tThis is a BDD test using Jasmine JavaScript framework\n*/\ndescribe('Starting flow - imdb 250 movies chart page: ', function () {\n  it('should open browser and go to IMDB 250 Top Rated Moveis page. ', function () {\n    _imdb250Chart.default.open(); // navigating to 250 movies page\n\n\n    expect(browser.getTitle()).toContain(\"IMDb Top 250 - IMDb\");\n  });\n  it('should sign in from Top 250 page. ', function () {\n    _signIn.default.clickSignInButton();\n\n    expect(browser.getTitle()).toContain(\"Sign in with IMDb - IMDb\");\n\n    _signIn.default.clickSigInWithGoogleButton();\n\n    _signIn.default.enterEmail();\n\n    _signIn.default.enterPassword();\n\n    _signIn.default.clickSubmitButton();\n\n    browser.pause(2000);\n    expect(browser.getTitle()).toContain('IMDb Top 250 - IMDb');\n  });\n  it('should verify Top Rated Moveis page headings, heading body texts and labels. ', function () {\n    expect(_imdb250Chart.default.getIMDbChartsHeading()).toContain('IMDb Charts');\n    expect(_imdb250Chart.default.getTopRatedMoviesHeading()).toContain('Top Rated Movies');\n    expect(_imdb250Chart.default.getTopRatedMoviesHeadingBody()).toContain('Top 250 as rated by IMDb Users');\n    expect(_imdb250Chart.default.getShowing250TitlesText()).toContain('Showing 250 Titles');\n    expect(_imdb250Chart.default.getRankAndTitleColumnText()).toContain(\"Rank & Title\");\n    expect(_imdb250Chart.default.getIMDbRatingColumnText()).toContain(\"IMDb Rating\");\n    expect(_imdb250Chart.default.getYourRatingColumnText()).toContain(\"Your Rating\");\n    expect(_imdb250Chart.default.getSortByLabelText()).toContain(\"Sort by:\");\n  });\n  it('should sort movies in Descending and Ascending order and add a movie to watchlist. ', function () {\n    expect(_imdb250Chart.default.sortMoviesInDesendingOrder()).toContain(\"Descending order\");\n    expect(_imdb250Chart.default.sortMoviesInAsendingOrder()).toContain(\"Ascending order\");\n    expect(_imdb250Chart.default.clickAddToWatchlist()).toContain(\"wl-ribbon standalone retina inWL\");\n    expect(_imdb250Chart.default.clickAddToWatchlist()).toContain(\"wl-ribbon standalone retina not-inWL\");\n  });\n  it('should rate and unrate the first movie on the 250 list. ', function () {\n    _imdb250Chart.default.markFirstMovieAsSeen();\n\n    expect(_imdb250Chart.default.getSeenTextForFirstMovie()).toContain(\"Seen\");\n\n    _imdb250Chart.default.rateFirstMovie();\n\n    browser.pause(1000);\n    expect(_imdb250Chart.default.getRatingNumberForFirstMovie()).toContain(\"10\");\n\n    _imdb250Chart.default.clickRatingNumber();\n\n    _imdb250Chart.default.clickDeleteRatingButton();\n  });\n  it('should sort the list of 250 movies based on different rankings available in dropdown. ', function () {\n    _imdb250Chart.default.sortByIMDbRatings();\n\n    browser.pause(1000);\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=ir,desc&mode=simple&page=1\");\n\n    _imdb250Chart.default.sortByReleaseDate();\n\n    browser.pause(1000);\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=us,desc&mode=simple&page=1\");\n\n    _imdb250Chart.default.sortByNumberOfRatinga();\n\n    browser.pause(1000);\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=nv,desc&mode=simple&page=1\");\n\n    _imdb250Chart.default.sortByYourRating();\n\n    browser.pause(1000);\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=ur,desc&mode=simple&page=1\");\n\n    _imdb250Chart.default.sortByRanking();\n\n    browser.pause(1000);\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=rk,asc&mode=simple&page=1\");\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "imdb250Chart.spec.js"
      ],
      "names": [
        "describe",
        "it",
        "IMDb",
        "open",
        "expect",
        "browser",
        "getTitle",
        "toContain",
        "SignIn",
        "clickSignInButton",
        "clickSigInWithGoogleButton",
        "enterEmail",
        "enterPassword",
        "clickSubmitButton",
        "pause",
        "getIMDbChartsHeading",
        "getTopRatedMoviesHeading",
        "getTopRatedMoviesHeadingBody",
        "getShowing250TitlesText",
        "getRankAndTitleColumnText",
        "getIMDbRatingColumnText",
        "getYourRatingColumnText",
        "getSortByLabelText",
        "sortMoviesInDesendingOrder",
        "sortMoviesInAsendingOrder",
        "clickAddToWatchlist",
        "markFirstMovieAsSeen",
        "getSeenTextForFirstMovie",
        "rateFirstMovie",
        "getRatingNumberForFirstMovie",
        "clickRatingNumber",
        "clickDeleteRatingButton",
        "sortByIMDbRatings",
        "getUrl",
        "sortByReleaseDate",
        "sortByNumberOfRatinga",
        "sortByYourRating",
        "sortByRanking"
      ],
      "mappings": ";;AACA;;AACA;;;;AAEA;;;AAIAA,QAAQ,CAAC,8CAAD,EAAiD,YAAW;AAElEC,EAAAA,EAAE,CAAC,gEAAD,EAAmE,YAAY;AAC/EC,0BAAKC,IAAL,GAD+E,CAC/D;;;AAChBC,IAAAA,MAAM,CAACC,OAAO,CAACC,QAAR,EAAD,CAAN,CAA2BC,SAA3B,CAAqC,qBAArC;AACD,GAHC,CAAF;AAKAN,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAY;AACnDO,oBAAOC,iBAAP;;AACAL,IAAAA,MAAM,CAACC,OAAO,CAACC,QAAR,EAAD,CAAN,CAA2BC,SAA3B,CAAqC,0BAArC;;AAEAC,oBAAOE,0BAAP;;AACAF,oBAAOG,UAAP;;AACAH,oBAAOI,aAAP;;AACAJ,oBAAOK,iBAAP;;AACAR,IAAAA,OAAO,CAACS,KAAR,CAAc,IAAd;AACAV,IAAAA,MAAM,CAACC,OAAO,CAACC,QAAR,EAAD,CAAN,CAA2BC,SAA3B,CAAqC,qBAArC;AACD,GAVC,CAAF;AAYAN,EAAAA,EAAE,CAAC,+EAAD,EAAkF,YAAY;AAC9FG,IAAAA,MAAM,CAACF,sBAAKa,oBAAL,EAAD,CAAN,CAAoCR,SAApC,CAA8C,aAA9C;AACAH,IAAAA,MAAM,CAACF,sBAAKc,wBAAL,EAAD,CAAN,CAAwCT,SAAxC,CAAkD,kBAAlD;AACAH,IAAAA,MAAM,CAACF,sBAAKe,4BAAL,EAAD,CAAN,CAA4CV,SAA5C,CAAsD,gCAAtD;AACAH,IAAAA,MAAM,CAACF,sBAAKgB,uBAAL,EAAD,CAAN,CAAuCX,SAAvC,CAAiD,oBAAjD;AACAH,IAAAA,MAAM,CAACF,sBAAKiB,yBAAL,EAAD,CAAN,CAAyCZ,SAAzC,CAAmD,cAAnD;AACAH,IAAAA,MAAM,CAACF,sBAAKkB,uBAAL,EAAD,CAAN,CAAuCb,SAAvC,CAAiD,aAAjD;AACAH,IAAAA,MAAM,CAACF,sBAAKmB,uBAAL,EAAD,CAAN,CAAuCd,SAAvC,CAAiD,aAAjD;AACAH,IAAAA,MAAM,CAACF,sBAAKoB,kBAAL,EAAD,CAAN,CAAkCf,SAAlC,CAA4C,UAA5C;AAED,GAVC,CAAF;AAYAN,EAAAA,EAAE,CAAC,qFAAD,EAAwF,YAAY;AACpGG,IAAAA,MAAM,CAACF,sBAAKqB,0BAAL,EAAD,CAAN,CAA0ChB,SAA1C,CAAoD,kBAApD;AACAH,IAAAA,MAAM,CAACF,sBAAKsB,yBAAL,EAAD,CAAN,CAAyCjB,SAAzC,CAAmD,iBAAnD;AACAH,IAAAA,MAAM,CAACF,sBAAKuB,mBAAL,EAAD,CAAN,CAAmClB,SAAnC,CAA6C,kCAA7C;AACAH,IAAAA,MAAM,CAACF,sBAAKuB,mBAAL,EAAD,CAAN,CAAmClB,SAAnC,CAA6C,sCAA7C;AACD,GALC,CAAF;AAOAN,EAAAA,EAAE,CAAC,0DAAD,EAA6D,YAAY;AACzEC,0BAAKwB,oBAAL;;AACAtB,IAAAA,MAAM,CAACF,sBAAKyB,wBAAL,EAAD,CAAN,CAAwCpB,SAAxC,CAAkD,MAAlD;;AACAL,0BAAK0B,cAAL;;AACAvB,IAAAA,OAAO,CAACS,KAAR,CAAc,IAAd;AACAV,IAAAA,MAAM,CAACF,sBAAK2B,4BAAL,EAAD,CAAN,CAA4CtB,SAA5C,CAAsD,IAAtD;;AACAL,0BAAK4B,iBAAL;;AACA5B,0BAAK6B,uBAAL;AACD,GARC,CAAF;AAUA9B,EAAAA,EAAE,CAAC,wFAAD,EAA2F,YAAY;AACvGC,0BAAK8B,iBAAL;;AACA3B,IAAAA,OAAO,CAACS,KAAR,CAAc,IAAd;AACAV,IAAAA,MAAM,CAACC,OAAO,CAAC4B,MAAR,EAAD,CAAN,CAAyB1B,SAAzB,CAAmC,gEAAnC;;AACAL,0BAAKgC,iBAAL;;AACA7B,IAAAA,OAAO,CAACS,KAAR,CAAc,IAAd;AACAV,IAAAA,MAAM,CAACC,OAAO,CAAC4B,MAAR,EAAD,CAAN,CAAyB1B,SAAzB,CAAmC,gEAAnC;;AACAL,0BAAKiC,qBAAL;;AACA9B,IAAAA,OAAO,CAACS,KAAR,CAAc,IAAd;AACAV,IAAAA,MAAM,CAACC,OAAO,CAAC4B,MAAR,EAAD,CAAN,CAAyB1B,SAAzB,CAAmC,gEAAnC;;AACAL,0BAAKkC,gBAAL;;AACA/B,IAAAA,OAAO,CAACS,KAAR,CAAc,IAAd;AACAV,IAAAA,MAAM,CAACC,OAAO,CAAC4B,MAAR,EAAD,CAAN,CAAyB1B,SAAzB,CAAmC,gEAAnC;;AACAL,0BAAKmC,aAAL;;AACAhC,IAAAA,OAAO,CAACS,KAAR,CAAc,IAAd;AACAV,IAAAA,MAAM,CAACC,OAAO,CAAC4B,MAAR,EAAD,CAAN,CAAyB1B,SAAzB,CAAmC,+DAAnC;AACD,GAhBC,CAAF;AAiBD,CAjEO,CAAR",
      "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/specs/",
      "sourcesContent": [
        "\nimport IMDb from '../pageobjects/imdb250Chart.page';\nimport SignIn from '../pageobjects/signIn.page';\n\n/*\n\tThis is a BDD test using Jasmine JavaScript framework\n*/\n\ndescribe('Starting flow - imdb 250 movies chart page: ', function() {\n  \n  it('should open browser and go to IMDB 250 Top Rated Moveis page. ', function () {\n    IMDb.open();    // navigating to 250 movies page\n    expect(browser.getTitle()).toContain(\"IMDb Top 250 - IMDb\");\n  });\n  \n  it('should sign in from Top 250 page. ', function () {\n    SignIn.clickSignInButton();\n    expect(browser.getTitle()).toContain(\"Sign in with IMDb - IMDb\");\n\n    SignIn.clickSigInWithGoogleButton();\n    SignIn.enterEmail();\n    SignIn.enterPassword();\n    SignIn.clickSubmitButton();\n    browser.pause(2000);\n    expect(browser.getTitle()).toContain('IMDb Top 250 - IMDb');\n  });\n\n  it('should verify Top Rated Moveis page headings, heading body texts and labels. ', function () {\n    expect(IMDb.getIMDbChartsHeading()).toContain('IMDb Charts');\n    expect(IMDb.getTopRatedMoviesHeading()).toContain('Top Rated Movies');\n    expect(IMDb.getTopRatedMoviesHeadingBody()).toContain('Top 250 as rated by IMDb Users');\n    expect(IMDb.getShowing250TitlesText()).toContain('Showing 250 Titles');\n    expect(IMDb.getRankAndTitleColumnText()).toContain(\"Rank & Title\");\n    expect(IMDb.getIMDbRatingColumnText()).toContain(\"IMDb Rating\");\n    expect(IMDb.getYourRatingColumnText()).toContain(\"Your Rating\");\n    expect(IMDb.getSortByLabelText()).toContain(\"Sort by:\");\n\n  });\n\n  it('should sort movies in Descending and Ascending order and add a movie to watchlist. ', function () {\n    expect(IMDb.sortMoviesInDesendingOrder()).toContain(\"Descending order\");\n    expect(IMDb.sortMoviesInAsendingOrder()).toContain(\"Ascending order\");\n    expect(IMDb.clickAddToWatchlist()).toContain(\"wl-ribbon standalone retina inWL\");\n    expect(IMDb.clickAddToWatchlist()).toContain(\"wl-ribbon standalone retina not-inWL\");\n  });\n\n  it('should rate and unrate the first movie on the 250 list. ', function () {\n    IMDb.markFirstMovieAsSeen();\n    expect(IMDb.getSeenTextForFirstMovie()).toContain(\"Seen\");\n    IMDb.rateFirstMovie();\n    browser.pause(1000);\n    expect(IMDb.getRatingNumberForFirstMovie()).toContain(\"10\");\n    IMDb.clickRatingNumber();\n    IMDb.clickDeleteRatingButton();\n  });\n\n  it('should sort the list of 250 movies based on different rankings available in dropdown. ', function () {\n    IMDb.sortByIMDbRatings();\n    browser.pause(1000)\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=ir,desc&mode=simple&page=1\");\n    IMDb.sortByReleaseDate();\n    browser.pause(1000)\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=us,desc&mode=simple&page=1\");\n    IMDb.sortByNumberOfRatinga();\n    browser.pause(1000)\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=nv,desc&mode=simple&page=1\");\n    IMDb.sortByYourRating();\n    browser.pause(1000)\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=ur,desc&mode=simple&page=1\");\n    IMDb.sortByRanking();\n    browser.pause(1000)\n    expect(browser.getUrl()).toContain(\"https://www.imdb.com/chart/top?sort=rk,asc&mode=simple&page=1\");\n  });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1589281803086
  },
  "{\"sourceRoot\":\"/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/zeeshankhalid/IMDb/MalwareBytes\",\"filename\":\"/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/imdb250Chart.page.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/zeeshankhalid/IMDb/MalwareBytes\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/zeeshankhalid/IMDb/MalwareBytes",
      "filename": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/imdb250Chart.page.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/zeeshankhalid/IMDb/MalwareBytes",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/imdb250Chart.page.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/imdb250Chart.page.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
        "sourceFileName": "imdb250Chart.page.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _page = _interopRequireDefault(require(\"./page\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass IMDb extends _page.default {\n  /**\n  * define elements\n  */\n  get topRatedMoviesHeading() {\n    return $(\"h1[class='header']\");\n  }\n\n  get rankAndTitleColumn() {\n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/thead/tr/th[2]\");\n  }\n\n  get iMDbRatingColumn() {\n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/thead/tr/th[3]\");\n  }\n\n  get yourRatingColumn() {\n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/thead/tr/th[4]\");\n  }\n\n  get sortByLabel() {\n    return $(\"label[class='lister-sort-by-label']\");\n  }\n\n  get IMDbChartsHeading() {\n    return $(\"//div[@class='article']//h3[contains(text(),'IMDb Charts')]\");\n  }\n\n  get topRatedMoviesHeadingBody() {\n    return $(\"div[class='byline']\");\n  }\n\n  get showing250TitlesText() {\n    return $(\"div[class='desc']\");\n  }\n\n  get sortMovies() {\n    return $(\"span[class*='global-sprite lister-sort-reverse']\");\n  }\n\n  get shareButton() {\n    return $(\"button[title='Share']\");\n  }\n\n  get twitterOptionButton() {\n    return $(\"span[class='share-widget-sprite share twitter']\");\n  }\n\n  get twitterUserNameField() {\n    return $(\"input[id='username_or_email']\");\n  }\n\n  get twitterPasswordField() {\n    return $(\"input[id='password']\");\n  }\n\n  get tweetField() {\n    return $(\"status\");\n  }\n\n  get twitterSubmitButton() {\n    return $(\"input[class='button selected submit']\");\n  }\n\n  get markSeen() {\n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/tbody/tr[1]/td[4]/div/div[2]/div[3]\");\n  }\n\n  get seenText() {\n    return $(\"//div[@class='seen-widget seen-widget-tt0111161 seen']//div[@class='seen'][contains(text(),'Seen')]\");\n  }\n\n  get rating10ForFirstMovie() {\n    return $(\"//div[@class='seen-widget seen-widget-tt0111161 seen']//li[contains(text(),'10')]\");\n  }\n\n  get ratingNumberForFirstMovie() {\n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/tbody/tr[1]/td[4]/div/div[2]/div[4]\");\n  }\n\n  get deleteRating() {\n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/tbody/tr[1]/td[4]/div/div[1]/div/span\");\n  }\n\n  get rankingDropdown() {\n    return $(\"select[id='lister-sort-by-options']\");\n  }\n\n  get addToWatchlist() {\n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/tbody/tr[1]/td[5]/div/div\");\n  }\n  /**\n   * define or overwrite page methods\n   */\n\n\n  open() {\n    super.open('/chart/top?ref_=nv_mv_250_6.'); //this will append `/chart/top?ref_=nv_mv_250_6.` to the baseUrl to make complete URL\n  }\n\n  getPageHeading() {\n    return this.topRelatedMoviesHeading.getText();\n  }\n\n  getIMDbChartsHeading() {\n    return this.IMDbChartsHeading.getText();\n  }\n\n  getTopRatedMoviesHeading() {\n    return this.topRatedMoviesHeading.getText();\n  }\n\n  getTopRatedMoviesHeadingBody() {\n    return this.topRatedMoviesHeadingBody.getText();\n  }\n\n  getRankAndTitleColumnText() {\n    return this.rankAndTitleColumn.getText();\n  }\n\n  getIMDbRatingColumnText() {\n    return this.iMDbRatingColumn.getText();\n  }\n\n  getYourRatingColumnText() {\n    return this.yourRatingColumn.getText();\n  }\n\n  getSortByLabelText() {\n    return this.sortByLabel.getText();\n  }\n\n  getShowing250TitlesText() {\n    return this.showing250TitlesText.getText();\n  }\n\n  sortMoviesInDesendingOrder() {\n    this.sortMovies.click();\n    return this.getCurrentSortingOrder();\n  }\n\n  sortMoviesInAsendingOrder() {\n    this.sortMovies.click();\n    return this.getCurrentSortingOrder();\n  }\n\n  getCurrentSortingOrder() {\n    return this.sortMovies.getAttribute(\"title\");\n  }\n\n  markFirstMovieAsSeen() {\n    return this.markSeen.click();\n  }\n\n  getSeenTextForFirstMovie() {\n    return this.seenText.getText();\n  }\n\n  rateFirstMovie() {\n    return this.rating10ForFirstMovie.click();\n  }\n\n  getRatingNumberForFirstMovie() {\n    return this.ratingNumberForFirstMovie.getText();\n  }\n\n  clickRatingNumber() {\n    return this.ratingNumberForFirstMovie.click();\n  }\n\n  clickDeleteRatingButton() {\n    return this.deleteRating.click();\n  }\n\n  sortByIMDbRatings() {\n    return this.rankingDropdown.selectByAttribute('value', 'ir:descending');\n  }\n\n  sortByReleaseDate() {\n    return this.rankingDropdown.selectByAttribute('value', 'us:descending');\n  }\n\n  sortByNumberOfRatinga() {\n    return this.rankingDropdown.selectByAttribute('value', 'nv:descending');\n  }\n\n  sortByYourRating() {\n    return this.rankingDropdown.selectByAttribute('value', 'ur:descending');\n  }\n\n  sortByRanking() {\n    return this.rankingDropdown.selectByAttribute('value', 'rk:ascending');\n  }\n\n  clickAddToWatchlist() {\n    this.addToWatchlist.click();\n    browser.pause(2000);\n    return this.addToWatchlist.getAttribute(\"class\");\n  }\n\n}\n\nvar _default = new IMDb();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "imdb250Chart.page.js"
      ],
      "names": [
        "IMDb",
        "Page",
        "topRatedMoviesHeading",
        "$",
        "rankAndTitleColumn",
        "iMDbRatingColumn",
        "yourRatingColumn",
        "sortByLabel",
        "IMDbChartsHeading",
        "topRatedMoviesHeadingBody",
        "showing250TitlesText",
        "sortMovies",
        "shareButton",
        "twitterOptionButton",
        "twitterUserNameField",
        "twitterPasswordField",
        "tweetField",
        "twitterSubmitButton",
        "markSeen",
        "seenText",
        "rating10ForFirstMovie",
        "ratingNumberForFirstMovie",
        "deleteRating",
        "rankingDropdown",
        "addToWatchlist",
        "open",
        "getPageHeading",
        "topRelatedMoviesHeading",
        "getText",
        "getIMDbChartsHeading",
        "getTopRatedMoviesHeading",
        "getTopRatedMoviesHeadingBody",
        "getRankAndTitleColumnText",
        "getIMDbRatingColumnText",
        "getYourRatingColumnText",
        "getSortByLabelText",
        "getShowing250TitlesText",
        "sortMoviesInDesendingOrder",
        "click",
        "getCurrentSortingOrder",
        "sortMoviesInAsendingOrder",
        "getAttribute",
        "markFirstMovieAsSeen",
        "getSeenTextForFirstMovie",
        "rateFirstMovie",
        "getRatingNumberForFirstMovie",
        "clickRatingNumber",
        "clickDeleteRatingButton",
        "sortByIMDbRatings",
        "selectByAttribute",
        "sortByReleaseDate",
        "sortByNumberOfRatinga",
        "sortByYourRating",
        "sortByRanking",
        "clickAddToWatchlist",
        "browser",
        "pause"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
      "sourcesContent": [
        "import Page from './page'\n\nclass IMDb extends Page {\n\n  /**\n  * define elements\n  */\n\n  get topRatedMoviesHeading ()     { \n    return $(\"h1[class='header']\"); \n  }\n\n  get rankAndTitleColumn ()     { \n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/thead/tr/th[2]\"); \n  }\n\n  get iMDbRatingColumn ()     { \n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/thead/tr/th[3]\"); \n  }\n\n  get yourRatingColumn ()     { \n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/thead/tr/th[4]\"); \n  }\n\n  get sortByLabel ()     { \n    return $(\"label[class='lister-sort-by-label']\"); \n  }\n  \n  get IMDbChartsHeading ()     { \n      return $(\"//div[@class='article']//h3[contains(text(),'IMDb Charts')]\"); \n  }\n\n  get topRatedMoviesHeadingBody ()     { \n      return $(\"div[class='byline']\"); \n  }\n\n  get showing250TitlesText ()     { \n      return $(\"div[class='desc']\"); \n  }\n\n  get sortMovies ()     { \n      return $(\"span[class*='global-sprite lister-sort-reverse']\"); \n  }\n  \n  get shareButton ()     { \n      return $(\"button[title='Share']\"); \n  }\n\n  get twitterOptionButton ()     { \n      return $(\"span[class='share-widget-sprite share twitter']\"); \n  }\n  \n  get twitterUserNameField ()     { \n      return $(\"input[id='username_or_email']\"); \n  }\n  \n  get twitterPasswordField ()     { \n      return $(\"input[id='password']\"); \n  }\n\n  get tweetField ()     { \n      return $(\"status\"); \n  }\n\n  get twitterSubmitButton ()     { \n      return $(\"input[class='button selected submit']\"); \n  }\n\n  get markSeen ()     { \n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/tbody/tr[1]/td[4]/div/div[2]/div[3]\"); \n  }\n  \n  get seenText ()     { \n    return $(\"//div[@class='seen-widget seen-widget-tt0111161 seen']//div[@class='seen'][contains(text(),'Seen')]\"); \n  }\n\n  get rating10ForFirstMovie ()     { \n    return $(\"//div[@class='seen-widget seen-widget-tt0111161 seen']//li[contains(text(),'10')]\"); \n  }\n\n  get ratingNumberForFirstMovie ()     { \n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/tbody/tr[1]/td[4]/div/div[2]/div[4]\"); \n  }\n\n  get deleteRating ()     { \n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/tbody/tr[1]/td[4]/div/div[1]/div/span\"); \n  }\n\n  get rankingDropdown ()     { \n    return $(\"select[id='lister-sort-by-options']\"); \n  }\n\n  get addToWatchlist ()     { \n    return $(\"//*[@id='main']/div/span/div/div/div[3]/table/tbody/tr[1]/td[5]/div/div\"); \n  }\n  \n  \n    \n  /**\n   * define or overwrite page methods\n   */\n  open () {\n      super.open('/chart/top?ref_=nv_mv_250_6.')       //this will append `/chart/top?ref_=nv_mv_250_6.` to the baseUrl to make complete URL\n  }\n\n  getPageHeading(){\n    return this.topRelatedMoviesHeading.getText();\n  }\n\n  getIMDbChartsHeading() {\n    return this.IMDbChartsHeading.getText();\n  }\n\n  getTopRatedMoviesHeading() {\n    return this.topRatedMoviesHeading.getText();\n  }\n\n  getTopRatedMoviesHeadingBody() {\n    return this.topRatedMoviesHeadingBody.getText();\n  }\n\n  getRankAndTitleColumnText() {\n    return this.rankAndTitleColumn.getText();\n  }\n\n  getIMDbRatingColumnText() {\n    return this.iMDbRatingColumn.getText();\n  }\n\n  getYourRatingColumnText() {\n    return this.yourRatingColumn.getText();\n  }\n\n  getSortByLabelText() {\n    return this.sortByLabel.getText();\n  }\n\n  getShowing250TitlesText() {\n    return this.showing250TitlesText.getText();\n  }\n\n  sortMoviesInDesendingOrder() {\n    this.sortMovies.click();\n    return this.getCurrentSortingOrder();\n  }\n\n  sortMoviesInAsendingOrder() {\n    this.sortMovies.click();\n    return this.getCurrentSortingOrder();\n  }\n\n  getCurrentSortingOrder() {\n    return this.sortMovies.getAttribute(\"title\");\n  }\n\n  markFirstMovieAsSeen(){\n    return this.markSeen.click();\n  }\n\n  getSeenTextForFirstMovie(){\n    return this.seenText.getText();\n  }\n\n  rateFirstMovie(){\n    return this.rating10ForFirstMovie.click();\n  }\n\n  getRatingNumberForFirstMovie(){\n    return this.ratingNumberForFirstMovie.getText();\n  }\n\n  clickRatingNumber(){\n    return this.ratingNumberForFirstMovie.click();\n  }\n\n  clickDeleteRatingButton(){\n    return this.deleteRating.click();\n  }\n\n  sortByIMDbRatings(){\n    return this.rankingDropdown.selectByAttribute('value', 'ir:descending');\n  }\n\n  sortByReleaseDate(){\n    return this.rankingDropdown.selectByAttribute('value', 'us:descending');\n  }\n    \n  sortByNumberOfRatinga(){\n    return this.rankingDropdown.selectByAttribute('value', 'nv:descending');\n  }\n    \n  sortByYourRating(){\n    return this.rankingDropdown.selectByAttribute('value', 'ur:descending');\n  }\n    \n  sortByRanking(){\n    return this.rankingDropdown.selectByAttribute('value', 'rk:ascending');\n  }\n\n  clickAddToWatchlist(){\n    this.addToWatchlist.click();\n    browser.pause(2000)\n    return this.addToWatchlist.getAttribute(\"class\");\n  }\n\n}export default new IMDb()"
      ]
    },
    "sourceType": "script",
    "mtime": 1589281807382
  },
  "{\"sourceRoot\":\"/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/zeeshankhalid/IMDb/MalwareBytes\",\"filename\":\"/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/page.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/zeeshankhalid/IMDb/MalwareBytes\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/zeeshankhalid/IMDb/MalwareBytes",
      "filename": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/page.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/zeeshankhalid/IMDb/MalwareBytes",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/page.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/page.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
        "sourceFileName": "page.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Page {\n  open(path) {\n    // To open the base URL + any page path.\n    browser.url(path);\n  }\n\n}\n\nexports.default = Page;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwibmFtZXMiOlsiUGFnZSIsIm9wZW4iLCJwYXRoIiwiYnJvd3NlciIsInVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFlLE1BQU1BLElBQU4sQ0FBVztBQUN0QkMsRUFBQUEsSUFBSSxDQUFFQyxJQUFGLEVBQVE7QUFBRTtBQUNaQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWjtBQUNEOztBQUhxQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvemVlc2hhbmtoYWxpZC9JTURiL01hbHdhcmVCeXRlcy90ZXN0L3BhZ2VvYmplY3RzLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhZ2Uge1xuICAgIG9wZW4gKHBhdGgpIHsgLy8gVG8gb3BlbiB0aGUgYmFzZSBVUkwgKyBhbnkgcGFnZSBwYXRoLlxuICAgICAgYnJvd3Nlci51cmwocGF0aCk7XG4gICAgfVxuICB9XG4gICJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "page.js"
      ],
      "names": [
        "Page",
        "open",
        "path",
        "browser",
        "url"
      ],
      "mappings": ";;;;;;;AAAe,MAAMA,IAAN,CAAW;AACtBC,EAAAA,IAAI,CAAEC,IAAF,EAAQ;AAAE;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAHqB",
      "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
      "sourcesContent": [
        "export default class Page {\n    open (path) { // To open the base URL + any page path.\n      browser.url(path);\n    }\n  }\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1589280546569
  },
  "{\"sourceRoot\":\"/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/zeeshankhalid/IMDb/MalwareBytes\",\"filename\":\"/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/signIn.page.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/zeeshankhalid/IMDb/MalwareBytes\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/zeeshankhalid/IMDb/MalwareBytes",
      "filename": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/signIn.page.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/zeeshankhalid/IMDb/MalwareBytes",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/signIn.page.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/signIn.page.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
        "sourceFileName": "signIn.page.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _page = _interopRequireDefault(require(\"./page\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass signIn extends _page.default {\n  /**\n  * define elements\n  */\n  get signInButton() {\n    return $(\"//*[@id=\\\"imdbHeader\\\"]/div[2]/div[5]/a\");\n  }\n\n  get SignInWithGoogle() {\n    return $(\"span[class='auth-provider-text']\");\n  }\n\n  get emailField() {\n    return $(\"input[class='a-input-text a-span12 auth-autofocus auth-required-field']\"); // a-input-text a-span12 auth-autofocus auth-required-field\n  }\n\n  get passwordField() {\n    return $(\"input[class='a-input-text a-span12 auth-required-field']\"); // a-input-text a-span12 auth-required-field\n  }\n\n  get submitButton() {\n    return $(\"input[class='a-button-input']\");\n  }\n  /**\n   * define or overwrite page methods\n   */\n\n\n  open() {\n    super.open('/'); //this will append `/chart/top?ref_=nv_mv_250_6.` to the baseUrl to make complete URL\n  }\n\n  clickSignInButton() {\n    return this.signInButton.click();\n  }\n\n  clickSigInWithGoogleButton() {\n    return this.SignInWithGoogle.click();\n  }\n\n  enterEmail() {\n    return this.emailField.setValue(\"imdb250toprated@gmail.com\");\n  }\n\n  enterPassword() {\n    return this.passwordField.setValue(\"Test11@@\");\n  }\n\n  clickSubmitButton() {\n    return this.submitButton.click();\n  }\n\n}\n\nvar _default = new signIn();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ25Jbi5wYWdlLmpzIl0sIm5hbWVzIjpbInNpZ25JbiIsIlBhZ2UiLCJzaWduSW5CdXR0b24iLCIkIiwiU2lnbkluV2l0aEdvb2dsZSIsImVtYWlsRmllbGQiLCJwYXNzd29yZEZpZWxkIiwic3VibWl0QnV0dG9uIiwib3BlbiIsImNsaWNrU2lnbkluQnV0dG9uIiwiY2xpY2siLCJjbGlja1NpZ0luV2l0aEdvb2dsZUJ1dHRvbiIsImVudGVyRW1haWwiLCJzZXRWYWx1ZSIsImVudGVyUGFzc3dvcmQiLCJjbGlja1N1Ym1pdEJ1dHRvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsTUFBTUEsTUFBTixTQUFxQkMsYUFBckIsQ0FBMEI7QUFFdEI7OztBQUlBLE1BQUlDLFlBQUosR0FBd0I7QUFDcEIsV0FBT0MsQ0FBQyxDQUFDLHlDQUFELENBQVI7QUFDSDs7QUFFRCxNQUFJQyxnQkFBSixHQUE0QjtBQUN4QixXQUFPRCxDQUFDLENBQUMsa0NBQUQsQ0FBUjtBQUNIOztBQUVELE1BQUlFLFVBQUosR0FBc0I7QUFDbEIsV0FBT0YsQ0FBQyxDQUFDLHlFQUFELENBQVIsQ0FEa0IsQ0FDbUU7QUFDeEY7O0FBRUQsTUFBSUcsYUFBSixHQUF5QjtBQUNyQixXQUFPSCxDQUFDLENBQUMsMERBQUQsQ0FBUixDQURxQixDQUNpRDtBQUN6RTs7QUFFRCxNQUFJSSxZQUFKLEdBQXdCO0FBQ3BCLFdBQU9KLENBQUMsQ0FBQywrQkFBRCxDQUFSO0FBQ0g7QUFFRDs7Ozs7QUFHQUssRUFBQUEsSUFBSSxHQUFJO0FBQ0osVUFBTUEsSUFBTixDQUFXLEdBQVgsRUFESSxDQUNrQjtBQUN6Qjs7QUFFREMsRUFBQUEsaUJBQWlCLEdBQUc7QUFDaEIsV0FBTyxLQUFLUCxZQUFMLENBQWtCUSxLQUFsQixFQUFQO0FBQ0g7O0FBRURDLEVBQUFBLDBCQUEwQixHQUFHO0FBQ3pCLFdBQU8sS0FBS1AsZ0JBQUwsQ0FBc0JNLEtBQXRCLEVBQVA7QUFDSDs7QUFFREUsRUFBQUEsVUFBVSxHQUFHO0FBQ1QsV0FBTyxLQUFLUCxVQUFMLENBQWdCUSxRQUFoQixDQUF5QiwyQkFBekIsQ0FBUDtBQUNIOztBQUVEQyxFQUFBQSxhQUFhLEdBQUc7QUFDWixXQUFPLEtBQUtSLGFBQUwsQ0FBbUJPLFFBQW5CLENBQTRCLFVBQTVCLENBQVA7QUFDSDs7QUFFREUsRUFBQUEsaUJBQWlCLEdBQUc7QUFDaEIsV0FBTyxLQUFLUixZQUFMLENBQWtCRyxLQUFsQixFQUFQO0FBQ0g7O0FBbkRxQjs7ZUFxRFYsSUFBSVYsTUFBSixFIiwic291cmNlUm9vdCI6Ii9Vc2Vycy96ZWVzaGFua2hhbGlkL0lNRGIvTWFsd2FyZUJ5dGVzL3Rlc3QvcGFnZW9iamVjdHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBhZ2UgZnJvbSAnLi9wYWdlJ1xuXG5jbGFzcyBzaWduSW4gZXh0ZW5kcyBQYWdlIHtcblxuICAgIC8qKlxuICAgICogZGVmaW5lIGVsZW1lbnRzXG4gICAgKi9cblxuICAgIGdldCBzaWduSW5CdXR0b24gKCkgICAgIHsgXG4gICAgICAgIHJldHVybiAkKFwiLy8qW0BpZD1cXFwiaW1kYkhlYWRlclxcXCJdL2RpdlsyXS9kaXZbNV0vYVwiKTsgXG4gICAgfVxuICAgIFxuICAgIGdldCBTaWduSW5XaXRoR29vZ2xlICgpICAgICB7IFxuICAgICAgICByZXR1cm4gJChcInNwYW5bY2xhc3M9J2F1dGgtcHJvdmlkZXItdGV4dCddXCIpOyBcbiAgICB9XG5cbiAgICBnZXQgZW1haWxGaWVsZCAoKSAgICAgeyBcbiAgICAgICAgcmV0dXJuICQoXCJpbnB1dFtjbGFzcz0nYS1pbnB1dC10ZXh0IGEtc3BhbjEyIGF1dGgtYXV0b2ZvY3VzIGF1dGgtcmVxdWlyZWQtZmllbGQnXVwiKTsgLy8gYS1pbnB1dC10ZXh0IGEtc3BhbjEyIGF1dGgtYXV0b2ZvY3VzIGF1dGgtcmVxdWlyZWQtZmllbGRcbiAgICB9XG4gIFxuICAgIGdldCBwYXNzd29yZEZpZWxkICgpICAgICB7IFxuICAgICAgICByZXR1cm4gJChcImlucHV0W2NsYXNzPSdhLWlucHV0LXRleHQgYS1zcGFuMTIgYXV0aC1yZXF1aXJlZC1maWVsZCddXCIpOyAvLyBhLWlucHV0LXRleHQgYS1zcGFuMTIgYXV0aC1yZXF1aXJlZC1maWVsZFxuICAgIH1cblxuICAgIGdldCBzdWJtaXRCdXR0b24gKCkgICAgIHsgXG4gICAgICAgIHJldHVybiAkKFwiaW5wdXRbY2xhc3M9J2EtYnV0dG9uLWlucHV0J11cIik7IFxuICAgIH1cbiAgXG4gICAgLyoqXG4gICAgICogZGVmaW5lIG9yIG92ZXJ3cml0ZSBwYWdlIG1ldGhvZHNcbiAgICAgKi9cbiAgICBvcGVuICgpIHtcbiAgICAgICAgc3VwZXIub3BlbignLycpICAgICAgIC8vdGhpcyB3aWxsIGFwcGVuZCBgL2NoYXJ0L3RvcD9yZWZfPW52X212XzI1MF82LmAgdG8gdGhlIGJhc2VVcmwgdG8gbWFrZSBjb21wbGV0ZSBVUkxcbiAgICB9XG5cbiAgICBjbGlja1NpZ25JbkJ1dHRvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2lnbkluQnV0dG9uLmNsaWNrKCk7XG4gICAgfVxuXG4gICAgY2xpY2tTaWdJbldpdGhHb29nbGVCdXR0b24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLlNpZ25JbldpdGhHb29nbGUuY2xpY2soKTtcbiAgICB9XG5cbiAgICBlbnRlckVtYWlsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbWFpbEZpZWxkLnNldFZhbHVlKFwiaW1kYjI1MHRvcHJhdGVkQGdtYWlsLmNvbVwiKTtcbiAgICB9XG5cbiAgICBlbnRlclBhc3N3b3JkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXNzd29yZEZpZWxkLnNldFZhbHVlKFwiVGVzdDExQEBcIik7XG4gICAgfVxuXG4gICAgY2xpY2tTdWJtaXRCdXR0b24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN1Ym1pdEJ1dHRvbi5jbGljaygpO1xuICAgIH1cblxufWV4cG9ydCBkZWZhdWx0IG5ldyBzaWduSW4oKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "signIn.page.js"
      ],
      "names": [
        "signIn",
        "Page",
        "signInButton",
        "$",
        "SignInWithGoogle",
        "emailField",
        "passwordField",
        "submitButton",
        "open",
        "clickSignInButton",
        "click",
        "clickSigInWithGoogleButton",
        "enterEmail",
        "setValue",
        "enterPassword",
        "clickSubmitButton"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,MAAMA,MAAN,SAAqBC,aAArB,CAA0B;AAEtB;;;AAIA,MAAIC,YAAJ,GAAwB;AACpB,WAAOC,CAAC,CAAC,yCAAD,CAAR;AACH;;AAED,MAAIC,gBAAJ,GAA4B;AACxB,WAAOD,CAAC,CAAC,kCAAD,CAAR;AACH;;AAED,MAAIE,UAAJ,GAAsB;AAClB,WAAOF,CAAC,CAAC,yEAAD,CAAR,CADkB,CACmE;AACxF;;AAED,MAAIG,aAAJ,GAAyB;AACrB,WAAOH,CAAC,CAAC,0DAAD,CAAR,CADqB,CACiD;AACzE;;AAED,MAAII,YAAJ,GAAwB;AACpB,WAAOJ,CAAC,CAAC,+BAAD,CAAR;AACH;AAED;;;;;AAGAK,EAAAA,IAAI,GAAI;AACJ,UAAMA,IAAN,CAAW,GAAX,EADI,CACkB;AACzB;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,WAAO,KAAKP,YAAL,CAAkBQ,KAAlB,EAAP;AACH;;AAEDC,EAAAA,0BAA0B,GAAG;AACzB,WAAO,KAAKP,gBAAL,CAAsBM,KAAtB,EAAP;AACH;;AAEDE,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKP,UAAL,CAAgBQ,QAAhB,CAAyB,2BAAzB,CAAP;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKR,aAAL,CAAmBO,QAAnB,CAA4B,UAA5B,CAAP;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,WAAO,KAAKR,YAAL,CAAkBG,KAAlB,EAAP;AACH;;AAnDqB;;eAqDV,IAAIV,MAAJ,E",
      "sourceRoot": "/Users/zeeshankhalid/IMDb/MalwareBytes/test/pageobjects/",
      "sourcesContent": [
        "import Page from './page'\n\nclass signIn extends Page {\n\n    /**\n    * define elements\n    */\n\n    get signInButton ()     { \n        return $(\"//*[@id=\\\"imdbHeader\\\"]/div[2]/div[5]/a\"); \n    }\n    \n    get SignInWithGoogle ()     { \n        return $(\"span[class='auth-provider-text']\"); \n    }\n\n    get emailField ()     { \n        return $(\"input[class='a-input-text a-span12 auth-autofocus auth-required-field']\"); // a-input-text a-span12 auth-autofocus auth-required-field\n    }\n  \n    get passwordField ()     { \n        return $(\"input[class='a-input-text a-span12 auth-required-field']\"); // a-input-text a-span12 auth-required-field\n    }\n\n    get submitButton ()     { \n        return $(\"input[class='a-button-input']\"); \n    }\n  \n    /**\n     * define or overwrite page methods\n     */\n    open () {\n        super.open('/')       //this will append `/chart/top?ref_=nv_mv_250_6.` to the baseUrl to make complete URL\n    }\n\n    clickSignInButton() {\n        return this.signInButton.click();\n    }\n\n    clickSigInWithGoogleButton() {\n        return this.SignInWithGoogle.click();\n    }\n\n    enterEmail() {\n        return this.emailField.setValue(\"imdb250toprated@gmail.com\");\n    }\n\n    enterPassword() {\n        return this.passwordField.setValue(\"Test11@@\");\n    }\n\n    clickSubmitButton() {\n        return this.submitButton.click();\n    }\n\n}export default new signIn()"
      ]
    },
    "sourceType": "script",
    "mtime": 1589280628722
  }
}